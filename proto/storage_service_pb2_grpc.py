# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from proto import storage_service_pb2 as proto_dot_storage__service__pb2


class StorageStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.addUser = channel.unary_unary(
                '/Storage.Storage/addUser',
                request_serializer=proto_dot_storage__service__pb2.User.SerializeToString,
                response_deserializer=proto_dot_storage__service__pb2.Status.FromString,
                )
        self.removeUser = channel.unary_unary(
                '/Storage.Storage/removeUser',
                request_serializer=proto_dot_storage__service__pb2.User.SerializeToString,
                response_deserializer=proto_dot_storage__service__pb2.Status.FromString,
                )
        self.addExpense = channel.unary_unary(
                '/Storage.Storage/addExpense',
                request_serializer=proto_dot_storage__service__pb2.UserExpense.SerializeToString,
                response_deserializer=proto_dot_storage__service__pb2.Status.FromString,
                )
        self.removeExpense = channel.unary_unary(
                '/Storage.Storage/removeExpense',
                request_serializer=proto_dot_storage__service__pb2.UserExpense.SerializeToString,
                response_deserializer=proto_dot_storage__service__pb2.Status.FromString,
                )
        self.getExpenses = channel.unary_unary(
                '/Storage.Storage/getExpenses',
                request_serializer=proto_dot_storage__service__pb2.User.SerializeToString,
                response_deserializer=proto_dot_storage__service__pb2.Expenses.FromString,
                )
        self.setExpense = channel.unary_unary(
                '/Storage.Storage/setExpense',
                request_serializer=proto_dot_storage__service__pb2.UserExpense.SerializeToString,
                response_deserializer=proto_dot_storage__service__pb2.Status.FromString,
                )
        self.addMoney = channel.unary_unary(
                '/Storage.Storage/addMoney',
                request_serializer=proto_dot_storage__service__pb2.Money.SerializeToString,
                response_deserializer=proto_dot_storage__service__pb2.Status.FromString,
                )
        self.getMoney = channel.unary_unary(
                '/Storage.Storage/getMoney',
                request_serializer=proto_dot_storage__service__pb2.User.SerializeToString,
                response_deserializer=proto_dot_storage__service__pb2.GetMoneyResponse.FromString,
                )


class StorageServicer(object):
    """Missing associated documentation comment in .proto file."""

    def addUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def removeUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def addExpense(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def removeExpense(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getExpenses(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def setExpense(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def addMoney(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getMoney(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_StorageServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'addUser': grpc.unary_unary_rpc_method_handler(
                    servicer.addUser,
                    request_deserializer=proto_dot_storage__service__pb2.User.FromString,
                    response_serializer=proto_dot_storage__service__pb2.Status.SerializeToString,
            ),
            'removeUser': grpc.unary_unary_rpc_method_handler(
                    servicer.removeUser,
                    request_deserializer=proto_dot_storage__service__pb2.User.FromString,
                    response_serializer=proto_dot_storage__service__pb2.Status.SerializeToString,
            ),
            'addExpense': grpc.unary_unary_rpc_method_handler(
                    servicer.addExpense,
                    request_deserializer=proto_dot_storage__service__pb2.UserExpense.FromString,
                    response_serializer=proto_dot_storage__service__pb2.Status.SerializeToString,
            ),
            'removeExpense': grpc.unary_unary_rpc_method_handler(
                    servicer.removeExpense,
                    request_deserializer=proto_dot_storage__service__pb2.UserExpense.FromString,
                    response_serializer=proto_dot_storage__service__pb2.Status.SerializeToString,
            ),
            'getExpenses': grpc.unary_unary_rpc_method_handler(
                    servicer.getExpenses,
                    request_deserializer=proto_dot_storage__service__pb2.User.FromString,
                    response_serializer=proto_dot_storage__service__pb2.Expenses.SerializeToString,
            ),
            'setExpense': grpc.unary_unary_rpc_method_handler(
                    servicer.setExpense,
                    request_deserializer=proto_dot_storage__service__pb2.UserExpense.FromString,
                    response_serializer=proto_dot_storage__service__pb2.Status.SerializeToString,
            ),
            'addMoney': grpc.unary_unary_rpc_method_handler(
                    servicer.addMoney,
                    request_deserializer=proto_dot_storage__service__pb2.Money.FromString,
                    response_serializer=proto_dot_storage__service__pb2.Status.SerializeToString,
            ),
            'getMoney': grpc.unary_unary_rpc_method_handler(
                    servicer.getMoney,
                    request_deserializer=proto_dot_storage__service__pb2.User.FromString,
                    response_serializer=proto_dot_storage__service__pb2.GetMoneyResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Storage.Storage', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Storage(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def addUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Storage.Storage/addUser',
            proto_dot_storage__service__pb2.User.SerializeToString,
            proto_dot_storage__service__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def removeUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Storage.Storage/removeUser',
            proto_dot_storage__service__pb2.User.SerializeToString,
            proto_dot_storage__service__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def addExpense(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Storage.Storage/addExpense',
            proto_dot_storage__service__pb2.UserExpense.SerializeToString,
            proto_dot_storage__service__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def removeExpense(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Storage.Storage/removeExpense',
            proto_dot_storage__service__pb2.UserExpense.SerializeToString,
            proto_dot_storage__service__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getExpenses(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Storage.Storage/getExpenses',
            proto_dot_storage__service__pb2.User.SerializeToString,
            proto_dot_storage__service__pb2.Expenses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def setExpense(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Storage.Storage/setExpense',
            proto_dot_storage__service__pb2.UserExpense.SerializeToString,
            proto_dot_storage__service__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def addMoney(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Storage.Storage/addMoney',
            proto_dot_storage__service__pb2.Money.SerializeToString,
            proto_dot_storage__service__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getMoney(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Storage.Storage/getMoney',
            proto_dot_storage__service__pb2.User.SerializeToString,
            proto_dot_storage__service__pb2.GetMoneyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
